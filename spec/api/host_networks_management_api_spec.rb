=begin
#VMware Fusion API 1.2.0

#REST API Explorer

OpenAPI spec version: 1.2.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.12

=end

require 'spec_helper'
require 'json'

# Unit tests for VMWareFusionClient::HostNetworksManagementApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'HostNetworksManagementApi' do
  before do
    # run before each test
    @instance = VMWareFusionClient::HostNetworksManagementApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of HostNetworksManagementApi' do
    it 'should create an instance of HostNetworksManagementApi' do
      expect(@instance).to be_instance_of(VMWareFusionClient::HostNetworksManagementApi)
    end
  end

  # unit tests for create_network
  # Creates a virtual network
  # @param parameters Host network to be created
  # @param [Hash] opts the optional parameters
  # @return [Network]
  describe 'create_network test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_portforward
  # Deletes port forwarding
  # @param vmnet NAT type of virtual network
  # @param protocol Protocol type: tcp, udp
  # @param port Host port number
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_portforward test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_networks
  # Returns all virtual networks
  # @param [Hash] opts the optional parameters
  # @return [Networks]
  describe 'get_all_networks test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_mac_to_i_ps
  # Returns all MAC-to-IP settings for DHCP service
  # @param vmnet Virtual network that has DHCP enabled
  # @param [Hash] opts the optional parameters
  # @return [MACToIPs]
  describe 'get_mac_to_i_ps test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_portforwards
  # Returns all port forwardings
  # @param vmnet NAT type of virtual network
  # @param [Hash] opts the optional parameters
  # @return [Portforwards]
  describe 'get_portforwards test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_mac_to_ip
  # Updates the MAC-to-IP binding
  # @param vmnet Virtual network that enabled DHCP
  # @param mac Mac address that want to be mapped with a given IP
  # @param parameters IP that will be assigned to given Mac address. If empty IP, the original Mac to IP binding will be deleted
  # @param [Hash] opts the optional parameters
  # @return [ErrorModel]
  describe 'update_mac_to_ip test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_portforward
  # Updates port forwarding
  # @param vmnet NAT type of virtual network
  # @param protocol Protocol type: tcp, udp
  # @param port Host port number
  # @param parameters Guest to forward to
  # @param [Hash] opts the optional parameters
  # @return [ErrorModel]
  describe 'update_portforward test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
